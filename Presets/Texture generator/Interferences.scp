{"Key":{"Uuid":"b9a20181-2925-4ade-925e-a2fd05fcbf9b","Effect":"#include <cmath>\nextern \"C\"\nvoid score_rgba(unsigned char* rgba, int width, int height, int t)\n{\n    int k = 0;\n    // Two circles moving in Lissajous pattern\n    int cx1 = width/2 + (width/3) * sin(t * 0.02);\n    int cy1 = height/2 + (height/3) * cos(t * 0.03);\n    int cx2 = width/2 + (width/3) * sin(t * 0.03);\n    int cy2 = height/2 + (height/3) * cos(t * 0.02);\n    \n    for(int j = 0; j < height; j++)\n    {\n        for(int i = 0; i < width; i++)\n        {\n            // Fast distance approximation (Manhattan distance modified)\n            int dx1 = abs(i - cx1);\n            int dy1 = abs(j - cy1);\n            int dx2 = abs(i - cx2);\n            int dy2 = abs(j - cy2);\n            \n            // Create interference pattern\n            int dist1 = (dx1 * dx1 + dy1 * dy1) >> 8;\n            int dist2 = (dx2 * dx2 + dy2 * dy2) >> 8;\n            \n            int interference = ((dist1 - t) ^ (dist2 - t)) & 255;\n            \n            // Classic blue/cyan palette\n            rgba[k++] = 0;\n            rgba[k++] = interference >> 1;\n            rgba[k++] = interference;\n            rgba[k++] = 255;\n        }\n    }\n}"},"Name":"Interferences","Preset":[]}