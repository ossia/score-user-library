{"Key":{"Uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","Effect":""},"Name":"RGB Voronoi Cell Noise","Preset":{"Fragment":"/*{\n    \"CATEGORIES\": [\n        \"Noise\",\n        \"Utility\"\n    ],\n    \"CREDIT\": \"Tuxic\",\n    \"DESCRIPTION\": \"generates a basic voronoi cell noise\",\n    \"INPUTS\": [\n        {\n            \"DEFAULT\": 12.9898,\n            \"MAX\": 100,\n            \"MIN\": 0,\n            \"NAME\": \"seed\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0.75,\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"iregularity\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0,\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"blur\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 10,\n            \"MAX\": 100,\n            \"MIN\": 0,\n            \"NAME\": \"scale\",\n            \"TYPE\": \"float\"\n        }\n    ],\n    \"ISFVSN\": \"2\"\n}\n*/\n\n//\t<https://www.shadertoy.com/view/Xd23Dh>\n//\tby inigo quilez <http://iquilezles.org/www/articles/voronoise/voronoise.htm>\n//\n\nvec3 hash3( vec2 p ){\n    vec3 q = vec3( dot(p,vec2(127.1,311.7)), \n\t\t\t\t   dot(p,vec2(269.5,183.3)), \n\t\t\t\t   dot(p,vec2(419.2,371.9)) );\n\treturn fract(sin(q)*43758.5453 * seed);\n}\n\nfloat iqnoise( in vec2 x, float u, float v ){\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n\t\t\n\tfloat k = 1.0+63.0*pow(1.0-v,4.0);\n\t\n\tfloat va = 0.0;\n\tfloat wt = 0.0;\n    for( int j=-2; j<=2; j++ )\n    for( int i=-2; i<=2; i++ )\n    {\n        vec2 g = vec2( float(i),float(j) );\n\t\tvec3 o = hash3( p + g )*vec3(u,u,1.0);\n\t\tvec2 r = g - f + o.xy;\n\t\tfloat d = dot(r,r);\n\t\tfloat ww = pow( 1.0-smoothstep(0.0,1.414,sqrt(d)), k );\n\t\tva += o.z*ww;\n\t\twt += ww;\n    }\n\t\n    return va/wt;\n}\n\nvoid main()\t{\n    float r = iqnoise(isf_FragNormCoord.xy * scale, iregularity, blur);\n    float g = iqnoise(isf_FragNormCoord.xy * scale - vec2(1), iregularity, blur);\n    float b = iqnoise(isf_FragNormCoord.xy * scale + vec2(1), iregularity, blur);\n\tgl_FragColor = vec4(r,g,b, 1);\n}\n","Vertex":"","Controls":[[0,{"Float":12.989800453186035}],[1,{"Float":0.75}],[2,{"Float":0.0}],[3,{"Float":10.0}]]}}