{"Key":{"Uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","Effect":""},"Name":"RGB White Noise","Preset":{"Fragment":"/*{\n    \"CATEGORIES\": [\n        \"Noise\",\n        \"Utility\"\n    ],\n    \"CREDIT\": \"Tuxic\",\n    \"DESCRIPTION\": \"generates a basic white noise\",\n    \"INPUTS\": [\n        {\n            \"DEFAULT\": 12.9898,\n            \"MAX\": 100,\n            \"MIN\": 0,\n            \"NAME\": \"seed\",\n            \"TYPE\": \"float\"\n        }\n    ],\n    \"ISFVSN\": \"2\"\n}\n*/\n\n// Author: Rich Harris\n// License: MIT\n\n// http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nfloat random(vec2 co)\n{\n    highp float a = seed;\n    highp float b = 78.233;\n    highp float c = 43758.5453;\n    highp float dt= dot(co.xy ,vec2(a,b));\n    highp float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\n\nvoid main()\n{\n    vec2 uv = isf_FragNormCoord.xy;\n    gl_FragColor = vec4(random(uv), random(uv+vec2(1)), random(uv-vec2(1)), 1);\n}\n","Vertex":"","Controls":[[0,{"Float":12.989800453186035}]]}}